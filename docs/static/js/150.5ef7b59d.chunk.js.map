{"version":3,"file":"static/js/150.5ef7b59d.chunk.js","mappings":"qNAEO,SAASA,IACZ,MAAO,CACHC,KAAMC,EAAAA,GAEd,CAEO,SAASC,EAAMC,GAClB,MAAO,CACHH,KAAMI,EAAAA,GACNC,QAASF,EAEjB,CAEO,SAASG,IACZ,MAAO,CACHN,KAAMO,EAAAA,GAEd,C,mHC8BA,MAjDA,SAA0BC,EAAOR,GAG7B,IAAIK,EAAU,CACVI,MAHJD,EAAQA,EAAME,OAIVC,OAAO,EACPC,aAAc,IAGlB,OAAQZ,GACJ,IAAK,QACD,IAAKQ,EAAO,CACRH,GAAO,kBAAQA,GAAO,IAAEM,OAAO,EAAMC,aAAc,yBACnD,KACJ,CAEA,IAAMC,EAAWL,EAAMM,cACH,mDAEHC,KAAKF,KAClBR,GAAO,kBAAQA,GAAO,IAAEM,OAAO,EAAMC,aAAc,wBAGvDP,GAAO,kBAAQA,GAAO,IAAEI,MAAOI,IAE/B,MAEJ,IAAK,WACD,IAAKL,EAAO,CACRH,GAAO,kBAAQA,GAAO,IAAEM,OAAO,EAAMC,aAAc,4BACnD,KACJ,CAIA,GAAIJ,EAAMQ,OAFY,EAEY,CAC9BX,GAAO,kBAAQA,GAAO,IAAEM,OAAO,EAAMC,aAAa,2BAAD,OAH/B,EAGyE,iBAC3F,KACJ,EAQR,OAAOP,CACX,E,SCaA,MAtDA,WACI,IAAMY,GAAUC,EAAAA,EAAAA,OAEhBC,EAAAA,EAAAA,YAAU,WACNF,GAAQlB,EAAAA,EAAAA,MACZ,GAAG,CAACkB,IAEJ,IAAMG,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,IAAI,KAE5CH,EAAAA,EAAAA,YAAU,WACFG,GAAQA,EAAKG,OACbL,EAAS,QAEjB,GAAG,CAACE,EAAMF,IAEV,IAAMM,GAAWC,EAAAA,EAAAA,UACXC,GAAUD,EAAAA,EAAAA,UAmBhB,OACI,kBAAME,UAAU,YAAYC,SAlBX,SAAAC,GACjBA,EAAEC,iBAEF,IAAMP,EAAQQ,EAAgBP,EAASQ,QAAQzB,MAAO,SAChD0B,EAAOF,EAAgBL,EAAQM,QAAQzB,MAAO,YAE9C2B,GAAWX,EAAMd,MACjB0B,GAAUF,EAAKxB,MAEjByB,GAAWC,GACXpB,GAAQf,EAAAA,EAAAA,IAAM,CACVuB,MAAOA,EAAMhB,MACb0B,KAAMA,EAAK1B,QAGvB,EAGuD,WAC/C,wBAAI,WACJ,wBAAI,2CAEJ,kBAAOoB,UAAU,wBAAuB,UACpC,kBAAOS,IAAKZ,EAAU1B,KAAK,QAAQuC,YAAY,cAGnD,kBAAOV,UAAU,2BAA0B,UACvC,kBAAOS,IAAKV,EAAS5B,KAAK,WAAWuC,YAAY,gBAGrD,4BAAQ,YAGpB,C","sources":["actions/rootActions.js","functions/inputsValidation.js","components/Login.jsx"],"sourcesContent":["import { CHECK_IF_LOGGED_IN, LOGIN, LOGOUT } from \"../actionsTypes/rootActionsTypes\";\r\n\r\nexport function checkIfLoggedIn() {\r\n    return {\r\n        type: CHECK_IF_LOGGED_IN\r\n    };\r\n}\r\n\r\nexport function login(data) {\r\n    return {\r\n        type: LOGIN,\r\n        payload: data\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return {\r\n        type: LOGOUT,\r\n    };\r\n}","function inputsValidation(input, type) {\r\n    input = input.trim();\r\n\r\n    let payload = {\r\n        value: input,\r\n        error: false,\r\n        notification: ''\r\n    };\r\n\r\n    switch (type) {\r\n        case 'email':\r\n            if (!input) {\r\n                payload = { ...payload, error: true, notification: 'email input is empty' };\r\n                break;\r\n            }\r\n\r\n            const newEmail = input.toLowerCase();\r\n            const emailFormat = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\r\n\r\n            if (!emailFormat.test(newEmail)) {\r\n                payload = { ...payload, error: true, notification: 'email is not valid' };\r\n            }\r\n\r\n            payload = { ...payload, value: newEmail };\r\n\r\n            break;\r\n\r\n        case 'password':\r\n            if (!input) {\r\n                payload = { ...payload, error: true, notification: 'password input is empty' };\r\n                break;\r\n            }\r\n\r\n            const minPassLength = 4;\r\n\r\n            if (input.length < minPassLength) {\r\n                payload = { ...payload, error: true, notification: `password length must be ${minPassLength} characters` };\r\n                break;\r\n            }\r\n\r\n            break;\r\n\r\n        default:\r\n            break;\r\n    }\r\n\r\n    return payload;\r\n}\r\n\r\nexport default inputsValidation;","import { useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { checkIfLoggedIn, login } from \"../actions/rootActions\";\r\nimport inputValidation from \"../functions/inputsValidation\";\r\n\r\nfunction Login() {\r\n    const dispach = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispach(checkIfLoggedIn());\r\n    }, [dispach]);\r\n\r\n    const navigate = useNavigate();\r\n    const user = useSelector(state => state.user);\r\n\r\n    useEffect(() => {\r\n        if (user && user.email) {\r\n            navigate('/user');\r\n        }\r\n    }, [user, navigate])\r\n\r\n    const emailRef = useRef();\r\n    const passRef = useRef();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const email = inputValidation(emailRef.current.value, 'email');\r\n        const pass = inputValidation(passRef.current.value, 'password');\r\n\r\n        const isEmail = !email.error;\r\n        const isPass = !pass.error;\r\n\r\n        if (isEmail && isPass) {\r\n            dispach(login({\r\n                email: email.value,\r\n                pass: pass.value\r\n            }));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className='container' onSubmit={handleSubmit}>\r\n            <h1>Login</h1>\r\n            <h2>Please enter your E-mail and Password</h2>\r\n\r\n            <label className='input-container email'>\r\n                <input ref={emailRef} type='email' placeholder=\"E-mail\" />\r\n            </label>\r\n\r\n            <label className='input-container password'>\r\n                <input ref={passRef} type='password' placeholder=\"Password\" />\r\n            </label>\r\n\r\n            <button>Login</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Login;"],"names":["checkIfLoggedIn","type","CHECK_IF_LOGGED_IN","login","data","LOGIN","payload","logout","LOGOUT","input","value","trim","error","notification","newEmail","toLowerCase","test","length","dispach","useDispatch","useEffect","navigate","useNavigate","user","useSelector","state","email","emailRef","useRef","passRef","className","onSubmit","e","preventDefault","inputValidation","current","pass","isEmail","isPass","ref","placeholder"],"sourceRoot":""}